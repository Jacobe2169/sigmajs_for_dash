{
  "src/lib/components/SigmaJSComponent.react.js": {
    "description": "Component to use SigmaJS renderer in a React/Dash application",
    "displayName": "SigmaJSComponent",
    "methods": [
      {
        "name": "layout",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "updateLayout",
        "docblock": "Update nodes positions given an object that associated each node with a position {x:<number>,y:<number>}\r\n@param {object} positions",
        "modifiers": [],
        "params": [
          {
            "name": "positions",
            "description": null,
            "type": {
              "name": "object"
            },
            "optional": false
          }
        ],
        "returns": null,
        "description": "Update nodes positions given an object that associated each node with a position {x:<number>,y:<number>}"
      },
      {
        "name": "setSearchQuery",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "query",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "setHoveredNode",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "data",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "enterNode",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "leaveNode",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "nodeReducer",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          },
          {
            "name": "data",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "edgeReducer",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "edge",
            "type": null
          },
          {
            "name": "data",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "graph_data": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Dict/JSON that contains graph definition. See https://graphology.github.io/serialization.html#format"
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The class(es) used to identify this component."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Inline Style",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Label",
        "defaultValue": {
          "value": "generateUID()",
          "computed": true
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      },
      "settings": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Settings",
        "defaultValue": {
          "value": "{ allowInvalidContainer: true }",
          "computed": false
        }
      },
      "layout": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Layout used \r\n - if empty will used ForceAltlas2\r\n - if empty string will used existing coordinates)",
        "defaultValue": {
          "value": "\"forceAtlas2\"",
          "computed": false
        }
      },
      "layoutSettings": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Settings dict that indicate layout settings",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "layoutNumberOfIteration": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number of iterations for the layout algorithm",
        "defaultValue": {
          "value": "100",
          "computed": false
        }
      },
      "nodeFocused": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Focus on a specific node : show only node and its neighbors",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      },
      "zoom": {
        "type": {
          "name": "shape",
          "value": {
            "duration": {
              "name": "number",
              "description": "Duration of the zoom animation",
              "required": false
            },
            "factor": {
              "name": "number",
              "description": "Zoom intensity",
              "required": false
            },
            "coordinates": {
              "name": "shape",
              "value": {
                "x": {
                  "name": "number",
                  "description": "x coordinate to zoom",
                  "required": false
                },
                "y": {
                  "name": "number",
                  "description": "y coordinate to zoom",
                  "required": false
                }
              },
              "description": "Zoom coordinates",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Zoom control",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      }
    }
  }
}